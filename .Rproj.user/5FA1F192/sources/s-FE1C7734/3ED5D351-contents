---
title: "R Notebook"
output: html_notebook
abstract: Análisis de páginas de Appropedia para mantenimiento del sitio
---

# Descripción

# Limpieza de páginas

Exportamos las páginas de la categoría [Special:Export](https://www.appropedia.org/Special:Export) como un archivo xml. El siguiente código las limpia y genera un tibble 

```{r clean}
require(xml2, quietly=T)
require(tidyverse, quietly=T)
require(lubridate, quietly=T)
require(tidytext, quietly=T)
require(stringr, quietly=T)

pages <- read_xml("appropedia_pages.xml")
pages_list <- as_list(pages)

pages_tibble <- as_tibble(
    sapply(pages_list[[1]], function(x){
        unlist(c(
            if(is.list(x$title)) x$title else NA, 
            if(is.list(x$id)) x$id else NA, 
            if(is.list(x$revision$id)) x$revision$id else NA, 
            if(is.list(x$revision$parentid)) x$revision$parentid else NA, 
            if(is.list(x$revision$timestamp)) x$revision$timestamp else NA,
            if(is.list(x$revision$contributor$username)) x$revision$contributor$username else NA, 
            if(is.list(x$revision$text) & length(x$revision$text)>0) as.character(x$revision$text) else NA,
            if(is.list(x$revision$minor)) T else F
        ))}), .name_repair = "minimal")

```


```{r transpose}
# https://stackoverflow.com/questions/42790219/how-do-i-transpose-a-tibble-in-r

pages_trans <- as_tibble(t(pages_tibble), .name_repair = "minimal")

tibble_names <- c("title", 
           "id", 
           "revision_id", 
           "parent_id", 
           "timestamp", 
           "username", 
           "text",
           "is_minor"
           )
colnames(pages_trans) <- tibble_names

pages_trans <- pages_trans %>% mutate(length = nchar(text)) %>% mutate(word_count = str_count(text, '\\w+'))

all_pages <- as_tibble(pages_trans)

all_pages$timestamp <- as_date(all_pages$timestamp)

all_pages <- all_pages[-1,]
```


  